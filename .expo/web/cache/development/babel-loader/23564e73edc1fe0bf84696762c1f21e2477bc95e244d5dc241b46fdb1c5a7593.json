{"ast":null,"code":"var _jsxFileName = \"/Users/niteshnamdev/Desktop/work/menkes-app/src/auth/register/ProfileDetails.tsx\";\nimport { colors, fonts } from \"../../theme\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport Icon from \"react-native-vector-icons/Entypo\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AnimatedTextInput from \"../../components/input/InputText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileDetails = ({\n  formState,\n  updateFormState\n}) => {\n  const [focusedField, setFocusedField] = React.useState(null);\n  const [isDatePickerVisible, setDatePickerVisibility] = React.useState(false);\n  const [selectedDate, setSelectedDate] = React.useState(new Date(formState.birthday || Date.now()));\n  const showDatePicker = () => {\n    setDatePickerVisibility(true);\n  };\n  const hideDatePicker = () => {\n    setDatePickerVisibility(false);\n  };\n  const handleDateChange = (event, date) => {\n    if (Platform.OS === \"android\") hideDatePicker();\n    if (date) {\n      setSelectedDate(date);\n      updateFormState(\"birthday\", date.toISOString().split(\"T\")[0]);\n    }\n  };\n  return _jsxDEV(TouchableWithoutFeedback, {\n    children: _jsxDEV(View, {\n      children: [_jsxDEV(Text, {\n        style: styles.sectionTitle,\n        children: \"Profile Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), _jsxDEV(AnimatedTextInput, {\n        label: \"First Name\",\n        value: formState.firstName,\n        onChangeText: text => updateFormState(\"firstName\", text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), _jsxDEV(AnimatedTextInput, {\n        label: \"Middle Name (optional)\",\n        value: formState.middleName,\n        onChangeText: text => updateFormState(\"middleName\", text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), _jsxDEV(AnimatedTextInput, {\n        label: \"Last Name\",\n        value: formState.lastName,\n        onChangeText: text => updateFormState(\"lastName\", text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), _jsxDEV(AnimatedTextInput, {\n        label: \"Phone\",\n        value: formState.phone,\n        onChangeText: text => {\n          const numericText = text.replace(/[^0-9]/g, \"\");\n          updateFormState(\"phone\", numericText);\n        },\n        keyboardType: \"numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), formState.phone.length !== 10 && _jsxDEV(View, {\n        style: {\n          marginBottom: 14\n        },\n        children: _jsxDEV(Text, {\n          style: styles.errorText,\n          children: [_jsxDEV(Icon, {\n            name: \"cross\",\n            size: 16,\n            color: \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), \" Enter a valid Phone\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), _jsxDEV(AnimatedTextInput, {\n        label: \"Birthday\",\n        value: selectedDate ? selectedDate.toISOString().split(\"T\")[0] : \"\",\n        onChangeText: handleDateChange,\n        editable: false,\n        onPress: showDatePicker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), isDatePickerVisible && _jsxDEV(DateTimePicker, {\n        value: selectedDate || new Date(),\n        mode: \"date\",\n        display: \"default\",\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: \"700\",\n    lineHeight: 30,\n    fontFamily: fonts.calibri.bold,\n    marginBottom: 16,\n    marginTop: 20,\n    color: colors.gray\n  },\n  errorText: {\n    color: \"black\",\n    marginTop: 4,\n    fontSize: 14\n  }\n});\nexport default ProfileDetails;","map":{"version":3,"names":["colors","fonts","DateTimePicker","Icon","React","Text","StyleSheet","View","TouchableWithoutFeedback","Platform","AnimatedTextInput","jsxDEV","_jsxDEV","ProfileDetails","formState","updateFormState","focusedField","setFocusedField","useState","isDatePickerVisible","setDatePickerVisibility","selectedDate","setSelectedDate","Date","birthday","now","showDatePicker","hideDatePicker","handleDateChange","event","date","OS","toISOString","split","children","style","styles","sectionTitle","fileName","_jsxFileName","lineNumber","columnNumber","label","value","firstName","onChangeText","text","middleName","lastName","phone","numericText","replace","keyboardType","length","marginBottom","errorText","name","size","color","editable","onPress","mode","display","onChange","create","fontSize","fontWeight","lineHeight","fontFamily","calibri","bold","marginTop","gray"],"sources":["/Users/niteshnamdev/Desktop/work/menkes-app/src/auth/register/ProfileDetails.tsx"],"sourcesContent":["import { colors, fonts } from \"@/theme\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport Icon from \"react-native-vector-icons/Entypo\";\nimport React from \"react\";\nimport {\n  TextInput,\n  Text,\n  StyleSheet,\n  View,\n  TouchableWithoutFeedback,\n  Keyboard,\n  TouchableOpacity,\n  Platform,\n} from \"react-native\";\nimport AnimatedTextInput from \"@/components/input/InputText\";\n\ntype ProfileDetailsProps = {\n  formState: {\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    phone: string;\n    birthday: string;\n  };\n  updateFormState: (\n    field: keyof ProfileDetailsProps[\"formState\"],\n    value: string\n  ) => void;\n};\n\nconst ProfileDetails: React.FC<ProfileDetailsProps> = ({\n  formState,\n  updateFormState,\n}) => {\n  const [focusedField, setFocusedField] = React.useState<string | null>(null);\n  const [isDatePickerVisible, setDatePickerVisibility] = React.useState(false);\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\n    new Date(formState.birthday || Date.now())\n  );\n\n  const showDatePicker = () => {\n    setDatePickerVisibility(true);\n  };\n\n  const hideDatePicker = () => {\n    setDatePickerVisibility(false);\n  };\n\n  const handleDateChange = (event: any, date?: Date) => {\n    if (Platform.OS === \"android\") hideDatePicker();\n    if (date) {\n      setSelectedDate(date);\n      updateFormState(\"birthday\", date.toISOString().split(\"T\")[0]);\n    }\n  };\n  return (\n    <TouchableWithoutFeedback>\n      <View>\n        <Text style={styles.sectionTitle}>Profile Details</Text>\n\n        <AnimatedTextInput\n          label={\"First Name\"}\n          value={formState.firstName}\n          onChangeText={(text: string) => updateFormState(\"firstName\", text)}\n        />\n\n        <AnimatedTextInput\n          label={\"Middle Name (optional)\"}\n          value={formState.middleName}\n          onChangeText={(text: string) => updateFormState(\"middleName\", text)}\n        />\n\n        <AnimatedTextInput\n          label={\"Last Name\"}\n          value={formState.lastName}\n          onChangeText={(text: string) => updateFormState(\"lastName\", text)}\n        />\n\n        <AnimatedTextInput\n          label={\"Phone\"}\n          value={formState.phone}\n          onChangeText={(text: string) => {\n            const numericText = text.replace(/[^0-9]/g, \"\");\n            updateFormState(\"phone\", numericText);\n          }}\n          keyboardType=\"numeric\"\n        />\n\n        {formState.phone.length !== 10 && (\n          <View style={{ marginBottom: 14 }}>\n            <Text style={styles.errorText}>\n              <Icon name=\"cross\" size={16} color=\"black\" /> Enter a valid Phone\n            </Text>\n          </View>\n        )}\n\n        <AnimatedTextInput\n          label={\"Birthday\"}\n          value={selectedDate ? selectedDate.toISOString().split(\"T\")[0] : \"\"}\n          onChangeText={handleDateChange}\n          editable={false}\n          onPress={showDatePicker}\n        />\n\n        {isDatePickerVisible && (\n          <DateTimePicker\n            value={selectedDate || new Date()}\n            mode=\"date\"\n            display=\"default\"\n            onChange={handleDateChange}\n          />\n        )}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\nconst styles = StyleSheet.create({\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: \"700\",\n    lineHeight: 30,\n    fontFamily: fonts.calibri.bold,\n    marginBottom: 16,\n    marginTop: 20,\n    color: colors.gray,\n  },\n  errorText: {\n    color: \"black\",\n    marginTop: 4,\n    fontSize: 14,\n  },\n});\n\nexport default ProfileDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}