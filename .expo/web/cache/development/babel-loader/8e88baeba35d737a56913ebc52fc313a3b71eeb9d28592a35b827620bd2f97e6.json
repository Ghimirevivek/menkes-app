{"ast":null,"code":"var _jsxFileName = \"/Users/niteshnamdev/Desktop/work/menkes-app/src/navigator/Navigator.tsx\";\nimport { useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { useAppSlice, useAppService } from \"../modules/app\";\nimport { loadImages, loadFonts } from \"../theme\";\nimport { useDataPersist } from \"../hooks\";\nimport { AuthStackNavigator, HomeStackNavigator } from \"./stack\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSplashScreen.preventAutoHideAsync();\nfunction Navigator() {\n  const {\n    getUser\n  } = useAppService();\n  const {\n    dispatch,\n    setUser,\n    setLoggedIn\n  } = useAppSlice();\n  const {\n    setPersistData,\n    getPersistData\n  } = useDataPersist();\n  const {\n    loggedIn,\n    user,\n    isCheckedL\n  } = useSelector(state => state.registration);\n  const preload = async () => {\n    try {\n      await Promise.all([loadImages(), loadFonts()]);\n      SplashScreen.hideAsync();\n    } catch (err) {}\n  };\n  useEffect(() => {\n    preload();\n  }, []);\n  return _jsxDEV(NavigationContainer, {\n    children: isCheckedL && loggedIn ? _jsxDEV(HomeStackNavigator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }, this) : _jsxDEV(AuthStackNavigator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 58\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\nexport default Navigator;","map":{"version":3,"names":["useEffect","NavigationContainer","SplashScreen","useAppSlice","useAppService","loadImages","loadFonts","useDataPersist","AuthStackNavigator","HomeStackNavigator","useSelector","jsxDEV","_jsxDEV","preventAutoHideAsync","Navigator","getUser","dispatch","setUser","setLoggedIn","setPersistData","getPersistData","loggedIn","user","isCheckedL","state","registration","preload","Promise","all","hideAsync","err","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/niteshnamdev/Desktop/work/menkes-app/src/navigator/Navigator.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { useAppSlice, useAppService, IUser } from \"@/modules/app\";\nimport { loadImages, loadFonts } from \"@/theme\";\nimport { useDataPersist, DataPersistKeys } from \"@/hooks\";\nimport { AuthStackNavigator, HomeStackNavigator } from \"./stack\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"@/redux/store\";\n\n// keep the splash screen visible while complete fetching resources\nSplashScreen.preventAutoHideAsync();\n\nfunction Navigator() {\n  const { getUser } = useAppService();\n  const { dispatch, setUser, setLoggedIn } = useAppSlice();\n  const { setPersistData, getPersistData } = useDataPersist();\n  const { loggedIn, user, isCheckedL } = useSelector(\n    (state: RootState) => state.registration\n  );\n\n  const preload = async () => {\n    try {\n      await Promise.all([loadImages(), loadFonts()]);\n      SplashScreen.hideAsync();\n    } catch (err) {}\n  };\n\n  useEffect(() => {\n    preload();\n  }, []);\n\n  return (\n    <NavigationContainer>\n      {isCheckedL && loggedIn ? <HomeStackNavigator /> : <AuthStackNavigator />}\n    </NavigationContainer>\n  );\n}\n\nexport default Navigator;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAClD,SAASC,WAAW,EAAEC,aAAa;AACnC,SAASC,UAAU,EAAEC,SAAS;AAC9B,SAASC,cAAc;AACvB,SAASC,kBAAkB,EAAEC,kBAAkB;AAC/C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1CV,YAAY,CAACW,oBAAoB,CAAC,CAAC;AAEnC,SAASC,SAASA,CAAA,EAAG;EACnB,MAAM;IAAEC;EAAQ,CAAC,GAAGX,aAAa,CAAC,CAAC;EACnC,MAAM;IAAEY,QAAQ;IAAEC,OAAO;IAAEC;EAAY,CAAC,GAAGf,WAAW,CAAC,CAAC;EACxD,MAAM;IAAEgB,cAAc;IAAEC;EAAe,CAAC,GAAGb,cAAc,CAAC,CAAC;EAC3D,MAAM;IAAEc,QAAQ;IAAEC,IAAI;IAAEC;EAAW,CAAC,GAAGb,WAAW,CAC/Cc,KAAgB,IAAKA,KAAK,CAACC,YAC9B,CAAC;EAED,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,OAAO,CAACC,GAAG,CAAC,CAACvB,UAAU,CAAC,CAAC,EAAEC,SAAS,CAAC,CAAC,CAAC,CAAC;MAC9CJ,YAAY,CAAC2B,SAAS,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE,CAAC;EACjB,CAAC;EAED9B,SAAS,CAAC,MAAM;IACd0B,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,OACEd,OAAA,CAACX,mBAAmB;IAAA8B,QAAA,EACjBR,UAAU,IAAIF,QAAQ,GAAGT,OAAA,CAACH,kBAAkB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAGvB,OAAA,CAACJ,kBAAkB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAE1B;AAEA,eAAerB,SAAS","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}