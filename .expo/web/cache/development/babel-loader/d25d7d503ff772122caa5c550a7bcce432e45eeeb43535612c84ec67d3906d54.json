{"ast":null,"code":"var _jsxFileName = \"/Users/niteshnamdev/Desktop/work/menkes-app/src/navigator/tab/Tab.tsx\";\nimport React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { colors } from \"../../theme\";\nimport Home from \"../../homescreen/Home\";\nimport HomeIcon from \"../../assets/icons/HomeIcon\";\nimport ProjectIcon from \"../../assets/icons/ProjectIcon\";\nimport SettingIcon from \"../../assets/icons/SettingIcon\";\nimport WraperCheckIcon from \"../../assets/icons/WraperCheckIcon\";\nimport { HomeStackScreen } from \"../stack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tab = createBottomTabNavigator();\nfunction CustomTabBar({\n  state,\n  descriptors,\n  navigation\n}) {\n  return _jsxDEV(View, {\n    style: styles.bottomNav,\n    children: state.routes.map((route, index) => {\n      const {\n        options\n      } = descriptors[route.key];\n      const label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n      const isFocused = state.index === index;\n      const onPress = () => {\n        const event = navigation.emit({\n          type: \"tabPress\",\n          target: route.key,\n          canPreventDefault: true\n        });\n        if (!isFocused && !event.defaultPrevented) {\n          navigation.navigate(route.name);\n        }\n      };\n      const onLongPress = () => {\n        navigation.emit({\n          type: \"tabLongPress\",\n          target: route.key\n        });\n      };\n      const getIcon = () => {\n        const iconProps = {\n          color: isFocused ? colors.primary : colors.tabnavigatorIcon\n        };\n        switch (route.name) {\n          case \"HomeTab\":\n            return _jsxDEV(HomeIcon, Object.assign({}, iconProps), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 22\n            }, this);\n          case \"ProjectsTab\":\n            return _jsxDEV(ProjectIcon, Object.assign({}, iconProps), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 22\n            }, this);\n          case \"SettingsTab\":\n            return _jsxDEV(SettingIcon, Object.assign({}, iconProps), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 22\n            }, this);\n          case \"CheckInTab\":\n            return _jsxDEV(WraperCheckIcon, Object.assign({}, iconProps), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 22\n            }, this);\n          default:\n            return null;\n        }\n      };\n      return _jsxDEV(TouchableOpacity, {\n        accessibilityRole: \"button\",\n        accessibilityState: isFocused ? {\n          selected: true\n        } : {},\n        accessibilityLabel: options.tabBarAccessibilityLabel,\n        testID: options.tabBarTestID,\n        onPress: onPress,\n        onLongPress: onLongPress,\n        style: styles.navItem,\n        children: [getIcon(), _jsxDEV(Text, {\n          style: [styles.navText, {\n            color: isFocused ? colors.primary : colors.gray\n          }],\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, route.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\nexport default function TabNavigator() {\n  return _jsxDEV(Tab.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    tabBar: props => _jsxDEV(CustomTabBar, Object.assign({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 26\n    }, this),\n    children: [_jsxDEV(Tab.Screen, {\n      name: \"HomeTab\",\n      component: HomeStackScreen,\n      options: {\n        title: \"Home\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"ProjectsTab\",\n      component: Home,\n      options: {\n        title: \"Projects\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"SettingsTab\",\n      component: Home,\n      options: {\n        title: \"Settings\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"CheckInTab\",\n      component: Home,\n      options: {\n        title: \"Check In\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  bottomNav: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    backgroundColor: colors.white,\n    paddingTop: 16,\n    paddingBottom: 26,\n    borderTopWidth: 1,\n    borderColor: \"#dee2e6\"\n  },\n  navItem: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  navText: {\n    fontSize: 12,\n    marginTop: 4\n  }\n});","map":{"version":3,"names":["React","createBottomTabNavigator","View","Text","TouchableOpacity","StyleSheet","colors","Home","HomeIcon","ProjectIcon","SettingIcon","WraperCheckIcon","HomeStackScreen","jsxDEV","_jsxDEV","Tab","CustomTabBar","state","descriptors","navigation","style","styles","bottomNav","children","routes","map","route","index","options","key","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","navigate","onLongPress","getIcon","iconProps","color","primary","tabnavigatorIcon","Object","assign","fileName","_jsxFileName","lineNumber","columnNumber","accessibilityRole","accessibilityState","selected","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","navItem","navText","gray","TabNavigator","Navigator","screenOptions","headerShown","tabBar","props","Screen","component","create","flexDirection","justifyContent","backgroundColor","white","paddingTop","paddingBottom","borderTopWidth","borderColor","alignItems","fontSize","marginTop"],"sources":["/Users/niteshnamdev/Desktop/work/menkes-app/src/navigator/tab/Tab.tsx"],"sourcesContent":["import React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\nimport Icon from \"react-native-vector-icons/Feather\"; // Ensure this matches your usage\nimport { colors } from \"@/theme\"; // Your theme colors\nimport Home from \"@/homescreen/Home\"; // Home component\nimport HomeIcon from \"@/assets/icons/HomeIcon\";\nimport ProjectIcon from \"@/assets/icons/ProjectIcon\";\nimport SettingIcon from \"@/assets/icons/SettingIcon\";\nimport WraperCheckIcon from \"@/assets/icons/WraperCheckIcon\";\nimport AllocatedUnits from \"@/AllocatedUnits/AllocatedUnits\";\nimport { HomeStackScreen } from \"../stack\";\n\nconst Tab = createBottomTabNavigator();\n\nfunction CustomTabBar({ state, descriptors, navigation }: any) {\n  return (\n    <View style={styles.bottomNav}>\n      {state.routes.map((route: any, index: number) => {\n        const { options } = descriptors[route.key];\n        const label =\n          options.tabBarLabel !== undefined\n            ? options.tabBarLabel\n            : options.title !== undefined\n              ? options.title\n              : route.name;\n\n        const isFocused = state.index === index;\n\n        const onPress = () => {\n          const event = navigation.emit({\n            type: \"tabPress\",\n            target: route.key,\n            canPreventDefault: true,\n          });\n\n          if (!isFocused && !event.defaultPrevented) {\n            navigation.navigate(route.name);\n          }\n        };\n\n        const onLongPress = () => {\n          navigation.emit({\n            type: \"tabLongPress\",\n            target: route.key,\n          });\n        };\n\n        const getIcon = () => {\n          const iconProps = {\n            color: isFocused ? colors.primary : colors.tabnavigatorIcon,\n          };\n\n          switch (route.name) {\n            case \"HomeTab\":\n              return <HomeIcon {...iconProps} />;\n            case \"ProjectsTab\":\n              return <ProjectIcon {...iconProps} />;\n            case \"SettingsTab\":\n              return <SettingIcon {...iconProps} />;\n            case \"CheckInTab\":\n              return <WraperCheckIcon {...iconProps} />;\n            default:\n              return null;\n          }\n        };\n\n        return (\n          <TouchableOpacity\n            key={route.name}\n            accessibilityRole=\"button\"\n            accessibilityState={isFocused ? { selected: true } : {}}\n            accessibilityLabel={options.tabBarAccessibilityLabel}\n            testID={options.tabBarTestID}\n            onPress={onPress}\n            onLongPress={onLongPress}\n            style={styles.navItem}\n          >\n            {getIcon()}\n            <Text\n              style={[\n                styles.navText,\n                { color: isFocused ? colors.primary : colors.gray },\n              ]}\n            >\n              {label}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n}\n\nexport default function TabNavigator() {\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}\n      tabBar={(props) => <CustomTabBar {...props} />}\n    >\n      <Tab.Screen\n        name=\"HomeTab\"\n        component={HomeStackScreen}\n        options={{ title: \"Home\" }}\n      />\n\n      <Tab.Screen\n        name=\"ProjectsTab\"\n        component={Home} // Replace with actual component\n        options={{ title: \"Projects\" }}\n      />\n      <Tab.Screen\n        name=\"SettingsTab\"\n        component={Home} // Replace with actual component\n        options={{ title: \"Settings\" }}\n      />\n      <Tab.Screen\n        name=\"CheckInTab\"\n        component={Home} // Replace with actual component\n        options={{ title: \"Check In\" }}\n      />\n    </Tab.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  bottomNav: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    backgroundColor: colors.white,\n    paddingTop: 16,\n    paddingBottom: 26,\n    borderTopWidth: 1,\n    borderColor: \"#dee2e6\",\n  },\n  navItem: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  navText: {\n    fontSize: 12,\n    marginTop: 4,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}