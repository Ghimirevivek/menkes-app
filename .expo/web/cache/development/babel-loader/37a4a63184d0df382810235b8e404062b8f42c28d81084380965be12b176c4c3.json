{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nconst initialState = {\n  loading: false,\n  user: null,\n  loggedIn: false,\n  message: \"\",\n  error: \"\",\n  isCheckedL: false\n};\nconst fakeRegisterApi = async userData => {\n  console.log(\"API called with:\", userData);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (userData.email === \"fail@example.com\") {\n        console.log(\"API failed\");\n        reject({\n          message: \"Registration failed!\"\n        });\n      } else {\n        console.log(\"API succeeded\");\n        resolve({\n          message: \"Registration successful!\",\n          user: userData\n        });\n      }\n    }, 1000);\n  });\n};\nexport const registerUser = createAsyncThunk(\"registration/registerUser\", async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fakeRegisterApi(userData);\n    await AsyncStorage.setItem(\"authUser\", JSON.stringify(response.user));\n    return response;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const loadUserFromStorage = createAsyncThunk(\"registration/loadUserFromStorage\", async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const user = await AsyncStorage.getItem(\"authUser\");\n    if (user) {\n      return JSON.parse(user);\n    }\n    return null;\n  } catch (error) {\n    return rejectWithValue(\"Failed to load user data\");\n  }\n});\nconst fakeLoginApi = async userData => {\n  console.log(\"Login API called with:\", userData);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (userData.email === \"fail@example.com\") {\n        console.log(\"Login API failed\");\n        reject({\n          message: \"Invalid email or password!\"\n        });\n      } else {\n        console.log(\"Login API succeeded\");\n        resolve({\n          message: \"Login successful!\",\n          user: userData\n        });\n      }\n    }, 1000);\n  });\n};\nexport const loginUser = createAsyncThunk(\"registration/loginUser\", async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fakeLoginApi(userData);\n    await AsyncStorage.setItem(\"authUser\", JSON.stringify(response.user));\n    return response;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst authSlice = createSlice({\n  name: \"registration\",\n  initialState,\n  reducers: {\n    resetState: state => {\n      state.loading = false;\n      state.user = null;\n      state.message = \"\";\n      state.error = \"\";\n      state.loggedIn = false;\n      state.isCheckedL = false;\n    },\n    setUserNull: state => {\n      state.user = null;\n      state.loggedIn = false;\n      state.isCheckedL = false;\n    },\n    setIsChecked: state => {\n      state.isCheckedL = true;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, state => {\n      state.loggedIn = false;\n      state.loading = true;\n      state.error = \"\";\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      console.log(\"dhjvndjkvndfkjvndfkvcndf\", action.payload);\n      state.loading = false;\n      state.loggedIn = true;\n      state.user = action.payload.user;\n      state.message = action.payload.message;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.loggedIn = false;\n      state.error = action.payload || \"Something went wrong!\";\n    }).addCase(loadUserFromStorage.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.loggedIn = !!action.payload;\n    }).addCase(loadUserFromStorage.rejected, (state, action) => {\n      state.error = action.payload ? action.payload : \"Failed to load user data\";\n      state.loggedIn = false;\n    }).addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = \"\";\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.loggedIn = true;\n      state.user = action.payload.user;\n      state.message = action.payload.message;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.loggedIn = false;\n      state.error = action.payload || \"Invalid login credentials!\";\n    });\n  }\n});\nexport const {\n  resetState,\n  setUserNull,\n  setIsChecked\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","AsyncStorage","initialState","loading","user","loggedIn","message","error","isCheckedL","fakeRegisterApi","userData","console","log","Promise","resolve","reject","setTimeout","email","registerUser","rejectWithValue","response","setItem","JSON","stringify","loadUserFromStorage","_","getItem","parse","fakeLoginApi","loginUser","authSlice","name","reducers","resetState","state","setUserNull","setIsChecked","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/niteshnamdev/Desktop/work/menkes-app/src/redux/slices/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n// Types\ninterface User {\n  email: string;\n  password: string;\n}\n\ninterface RegistrationState {\n  loading: boolean;\n  user: User | null;\n  message: string;\n  error: string;\n  loggedIn: boolean;\n  isCheckedL:boolean;\n}\n\nconst initialState: RegistrationState = {\n  loading: false,\n  user: null,\n  loggedIn: false,\n  message: \"\",\n  error: \"\",\n  isCheckedL: false,\n};\n\n// Fake API call\nconst fakeRegisterApi = async (userData: User): Promise<{ message: string; user: User }> => {\n  console.log(\"API called with:\", userData);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (userData.email === \"fail@example.com\") {\n        console.log(\"API failed\");\n        reject({ message: \"Registration failed!\" });\n      } else {\n        console.log(\"API succeeded\");\n        resolve({ message: \"Registration successful!\", user: userData });\n      }\n    }, 1000);\n  });\n};\n\n// Async thunk\nexport const registerUser = createAsyncThunk(\n  \"registration/registerUser\",\n  async (userData: User, { rejectWithValue }) => {\n    try {\n      const response = await fakeRegisterApi(userData);\n      // Save user data to AsyncStorage\n      await AsyncStorage.setItem(\"authUser\", JSON.stringify(response.user));\n      return response;\n    } catch (error: any) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\n// Load user from AsyncStorage (for rehydration)\nexport const loadUserFromStorage = createAsyncThunk(\n  \"registration/loadUserFromStorage\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const user = await AsyncStorage.getItem(\"authUser\");\n      if (user) {\n        return JSON.parse(user);\n      }\n      return null;\n    } catch (error) {\n      return rejectWithValue(\"Failed to load user data\");\n    }\n  }\n);\n\n\n\n\n// Login api fake \nconst fakeLoginApi = async (userData: User): Promise<{ message: string; user: User }> => {\n    console.log(\"Login API called with:\", userData);\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (userData.email === \"fail@example.com\") {\n          console.log(\"Login API failed\");\n          reject({ message: \"Invalid email or password!\" });\n        } else {\n          console.log(\"Login API succeeded\");\n          resolve({ message: \"Login successful!\", user: userData });\n        }\n      }, 1000);\n    });\n  };\n  \n  // Async thunk for Login api fake \n  export const loginUser = createAsyncThunk(\n    \"registration/loginUser\",\n    async (userData: User, { rejectWithValue }) => {\n      try {\n        const response = await fakeLoginApi(userData);\n        // Save user data to AsyncStorage\n        await AsyncStorage.setItem(\"authUser\", JSON.stringify(response.user));\n        return response;\n      } catch (error: any) {\n        return rejectWithValue(error.message);\n      }\n    }\n  );\n  \n\n\nconst authSlice = createSlice({\n  name: \"registration\",\n  initialState,\n  reducers: {\n    resetState: (state) => {\n      state.loading = false;\n      state.user = null;\n      state.message = \"\";\n      state.error = \"\";\n      state.loggedIn = false;\n      state.isCheckedL = false;\n      \n    },\n\n    // logout \n    setUserNull: (state) => {\n      state.user = null;\n      state.loggedIn = false;\n      state.isCheckedL = false;\n    },\n    setIsChecked: (state) => {\n        state.isCheckedL = true; // Update isCheckedL\n      },\n  },\n  extraReducers: (builder) => {\n    builder\n    // fake register api \n      .addCase(registerUser.pending, (state) => {\n        state.loggedIn = false;\n        state.loading = true;\n        state.error = \"\";\n      })\n      .addCase(registerUser.fulfilled, (state, action: PayloadAction<{ message: string; user: User }>) => {\n        console.log(\"dhjvndjkvndfkjvndfkvcndf\",action.payload)\n        state.loading = false;\n        state.loggedIn = true;\n        state.user = action.payload.user;\n        state.message = action.payload.message;\n      })\n      .addCase(registerUser.rejected, (state, action) => {\n        state.loading = false;\n        state.loggedIn = false;\n        state.error = action.payload || \"Something went wrong!\";\n      })\n      .addCase(loadUserFromStorage.fulfilled, (state, action: PayloadAction<User | null>) => {\n        state.user = action.payload;\n        state.loggedIn = !!action.payload;\n      })\n      .addCase(loadUserFromStorage.rejected, (state, action) => {\n        state.error = action.payload ? action.payload : \"Failed to load user data\";\n        state.loggedIn = false;\n      })\n\n//Fake login api \n      .addCase(loginUser.pending, (state) => {\n        state.loading = true;\n        state.error = \"\";\n      })\n      .addCase(loginUser.fulfilled, (state, action: PayloadAction<{ message: string; user: User }>) => {\n        state.loading = false;\n        state.loggedIn = true;\n        state.user = action.payload.user;\n        state.message = action.payload.message;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.loading = false;\n        state.loggedIn = false;\n        state.error = action.payload || \"Invalid login credentials!\";\n      });\n\n  },\n});\n\nexport const { resetState, setUserNull,setIsChecked } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAC/E,OAAOC,YAAY,MAAM,2CAA2C;AAiBpE,MAAMC,YAA+B,GAAG;EACtCC,OAAO,EAAE,KAAK;EACdC,IAAI,EAAE,IAAI;EACVC,QAAQ,EAAE,KAAK;EACfC,OAAO,EAAE,EAAE;EACXC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE;AACd,CAAC;AAGD,MAAMC,eAAe,GAAG,MAAOC,QAAc,IAA+C;EAC1FC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAAC;EACzC,OAAO,IAAIG,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCC,UAAU,CAAC,MAAM;MACf,IAAIN,QAAQ,CAACO,KAAK,KAAK,kBAAkB,EAAE;QACzCN,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QACzBG,MAAM,CAAC;UAAET,OAAO,EAAE;QAAuB,CAAC,CAAC;MAC7C,CAAC,MAAM;QACLK,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC5BE,OAAO,CAAC;UAAER,OAAO,EAAE,0BAA0B;UAAEF,IAAI,EAAEM;QAAS,CAAC,CAAC;MAClE;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,CAAC;AACJ,CAAC;AAGD,OAAO,MAAMQ,YAAY,GAAGlB,gBAAgB,CAC1C,2BAA2B,EAC3B,OAAOU,QAAc,EAAE;EAAES;AAAgB,CAAC,KAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMX,eAAe,CAACC,QAAQ,CAAC;IAEhD,MAAMT,YAAY,CAACoB,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAChB,IAAI,CAAC,CAAC;IACrE,OAAOgB,QAAQ;EACjB,CAAC,CAAC,OAAOb,KAAU,EAAE;IACnB,OAAOY,eAAe,CAACZ,KAAK,CAACD,OAAO,CAAC;EACvC;AACF,CACF,CAAC;AAGD,OAAO,MAAMkB,mBAAmB,GAAGxB,gBAAgB,CACjD,kCAAkC,EAClC,OAAOyB,CAAC,EAAE;EAAEN;AAAgB,CAAC,KAAK;EAChC,IAAI;IACF,MAAMf,IAAI,GAAG,MAAMH,YAAY,CAACyB,OAAO,CAAC,UAAU,CAAC;IACnD,IAAItB,IAAI,EAAE;MACR,OAAOkB,IAAI,CAACK,KAAK,CAACvB,IAAI,CAAC;IACzB;IACA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAOY,eAAe,CAAC,0BAA0B,CAAC;EACpD;AACF,CACF,CAAC;AAMD,MAAMS,YAAY,GAAG,MAAOlB,QAAc,IAA+C;EACrFC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,QAAQ,CAAC;EAC/C,OAAO,IAAIG,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCC,UAAU,CAAC,MAAM;MACf,IAAIN,QAAQ,CAACO,KAAK,KAAK,kBAAkB,EAAE;QACzCN,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAC/BG,MAAM,CAAC;UAAET,OAAO,EAAE;QAA6B,CAAC,CAAC;MACnD,CAAC,MAAM;QACLK,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCE,OAAO,CAAC;UAAER,OAAO,EAAE,mBAAmB;UAAEF,IAAI,EAAEM;QAAS,CAAC,CAAC;MAC3D;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,CAAC;AACJ,CAAC;AAGD,OAAO,MAAMmB,SAAS,GAAG7B,gBAAgB,CACvC,wBAAwB,EACxB,OAAOU,QAAc,EAAE;EAAES;AAAgB,CAAC,KAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMQ,YAAY,CAAClB,QAAQ,CAAC;IAE7C,MAAMT,YAAY,CAACoB,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAChB,IAAI,CAAC,CAAC;IACrE,OAAOgB,QAAQ;EACjB,CAAC,CAAC,OAAOb,KAAU,EAAE;IACnB,OAAOY,eAAe,CAACZ,KAAK,CAACD,OAAO,CAAC;EACvC;AACF,CACF,CAAC;AAIH,MAAMwB,SAAS,GAAG/B,WAAW,CAAC;EAC5BgC,IAAI,EAAE,cAAc;EACpB7B,YAAY;EACZ8B,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAAC/B,OAAO,GAAG,KAAK;MACrB+B,KAAK,CAAC9B,IAAI,GAAG,IAAI;MACjB8B,KAAK,CAAC5B,OAAO,GAAG,EAAE;MAClB4B,KAAK,CAAC3B,KAAK,GAAG,EAAE;MAChB2B,KAAK,CAAC7B,QAAQ,GAAG,KAAK;MACtB6B,KAAK,CAAC1B,UAAU,GAAG,KAAK;IAE1B,CAAC;IAGD2B,WAAW,EAAGD,KAAK,IAAK;MACtBA,KAAK,CAAC9B,IAAI,GAAG,IAAI;MACjB8B,KAAK,CAAC7B,QAAQ,GAAG,KAAK;MACtB6B,KAAK,CAAC1B,UAAU,GAAG,KAAK;IAC1B,CAAC;IACD4B,YAAY,EAAGF,KAAK,IAAK;MACrBA,KAAK,CAAC1B,UAAU,GAAG,IAAI;IACzB;EACJ,CAAC;EACD6B,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAEJC,OAAO,CAACrB,YAAY,CAACsB,OAAO,EAAGN,KAAK,IAAK;MACxCA,KAAK,CAAC7B,QAAQ,GAAG,KAAK;MACtB6B,KAAK,CAAC/B,OAAO,GAAG,IAAI;MACpB+B,KAAK,CAAC3B,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC,CACDgC,OAAO,CAACrB,YAAY,CAACuB,SAAS,EAAE,CAACP,KAAK,EAAEQ,MAAsD,KAAK;MAClG/B,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAC8B,MAAM,CAACC,OAAO,CAAC;MACtDT,KAAK,CAAC/B,OAAO,GAAG,KAAK;MACrB+B,KAAK,CAAC7B,QAAQ,GAAG,IAAI;MACrB6B,KAAK,CAAC9B,IAAI,GAAGsC,MAAM,CAACC,OAAO,CAACvC,IAAI;MAChC8B,KAAK,CAAC5B,OAAO,GAAGoC,MAAM,CAACC,OAAO,CAACrC,OAAO;IACxC,CAAC,CAAC,CACDiC,OAAO,CAACrB,YAAY,CAAC0B,QAAQ,EAAE,CAACV,KAAK,EAAEQ,MAAM,KAAK;MACjDR,KAAK,CAAC/B,OAAO,GAAG,KAAK;MACrB+B,KAAK,CAAC7B,QAAQ,GAAG,KAAK;MACtB6B,KAAK,CAAC3B,KAAK,GAAGmC,MAAM,CAACC,OAAO,IAAI,uBAAuB;IACzD,CAAC,CAAC,CACDJ,OAAO,CAACf,mBAAmB,CAACiB,SAAS,EAAE,CAACP,KAAK,EAAEQ,MAAkC,KAAK;MACrFR,KAAK,CAAC9B,IAAI,GAAGsC,MAAM,CAACC,OAAO;MAC3BT,KAAK,CAAC7B,QAAQ,GAAG,CAAC,CAACqC,MAAM,CAACC,OAAO;IACnC,CAAC,CAAC,CACDJ,OAAO,CAACf,mBAAmB,CAACoB,QAAQ,EAAE,CAACV,KAAK,EAAEQ,MAAM,KAAK;MACxDR,KAAK,CAAC3B,KAAK,GAAGmC,MAAM,CAACC,OAAO,GAAGD,MAAM,CAACC,OAAO,GAAG,0BAA0B;MAC1ET,KAAK,CAAC7B,QAAQ,GAAG,KAAK;IACxB,CAAC,CAAC,CAGDkC,OAAO,CAACV,SAAS,CAACW,OAAO,EAAGN,KAAK,IAAK;MACrCA,KAAK,CAAC/B,OAAO,GAAG,IAAI;MACpB+B,KAAK,CAAC3B,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC,CACDgC,OAAO,CAACV,SAAS,CAACY,SAAS,EAAE,CAACP,KAAK,EAAEQ,MAAsD,KAAK;MAC/FR,KAAK,CAAC/B,OAAO,GAAG,KAAK;MACrB+B,KAAK,CAAC7B,QAAQ,GAAG,IAAI;MACrB6B,KAAK,CAAC9B,IAAI,GAAGsC,MAAM,CAACC,OAAO,CAACvC,IAAI;MAChC8B,KAAK,CAAC5B,OAAO,GAAGoC,MAAM,CAACC,OAAO,CAACrC,OAAO;IACxC,CAAC,CAAC,CACDiC,OAAO,CAACV,SAAS,CAACe,QAAQ,EAAE,CAACV,KAAK,EAAEQ,MAAM,KAAK;MAC9CR,KAAK,CAAC/B,OAAO,GAAG,KAAK;MACrB+B,KAAK,CAAC7B,QAAQ,GAAG,KAAK;MACtB6B,KAAK,CAAC3B,KAAK,GAAGmC,MAAM,CAACC,OAAO,IAAI,4BAA4B;IAC9D,CAAC,CAAC;EAEN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV,UAAU;EAAEE,WAAW;EAACC;AAAa,CAAC,GAAGN,SAAS,CAACe,OAAO;AACzE,eAAef,SAAS,CAACgB,OAAO","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}