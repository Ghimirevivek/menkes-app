{"ast":null,"code":"import { isRunningInExpoGo } from 'expo';\nfunction areWeTestingWithJest() {\n  return process.env.JEST_WORKER_ID !== undefined || process.env.NODE_ENV === 'TEST';\n}\nif (isRunningInExpoGo() && !areWeTestingWithJest()) {\n  const message = '`expo-notifications` functionality is not fully supported in Expo Go:\\n' + 'We recommend you instead use a development build to avoid limitations. Learn more: https://expo.fyi/dev-client.';\n  console.warn(message);\n}\nexport { default as getDevicePushTokenAsync } from \"./getDevicePushTokenAsync\";\nexport { default as unregisterForNotificationsAsync } from \"./unregisterForNotificationsAsync\";\nexport { default as getExpoPushTokenAsync } from \"./getExpoPushTokenAsync\";\nexport { default as getPresentedNotificationsAsync } from \"./getPresentedNotificationsAsync\";\nexport { default as presentNotificationAsync } from \"./presentNotificationAsync\";\nexport { default as dismissNotificationAsync } from \"./dismissNotificationAsync\";\nexport { default as dismissAllNotificationsAsync } from \"./dismissAllNotificationsAsync\";\nexport { default as getNotificationChannelsAsync } from \"./getNotificationChannelsAsync\";\nexport { default as getNotificationChannelAsync } from \"./getNotificationChannelAsync\";\nexport { default as setNotificationChannelAsync } from \"./setNotificationChannelAsync\";\nexport { default as deleteNotificationChannelAsync } from \"./deleteNotificationChannelAsync\";\nexport { default as getNotificationChannelGroupsAsync } from \"./getNotificationChannelGroupsAsync\";\nexport { default as getNotificationChannelGroupAsync } from \"./getNotificationChannelGroupAsync\";\nexport { default as setNotificationChannelGroupAsync } from \"./setNotificationChannelGroupAsync\";\nexport { default as deleteNotificationChannelGroupAsync } from \"./deleteNotificationChannelGroupAsync\";\nexport { default as getBadgeCountAsync } from \"./getBadgeCountAsync\";\nexport { default as setBadgeCountAsync } from \"./setBadgeCountAsync\";\nexport { default as getAllScheduledNotificationsAsync } from \"./getAllScheduledNotificationsAsync\";\nexport { default as scheduleNotificationAsync } from \"./scheduleNotificationAsync\";\nexport { default as cancelScheduledNotificationAsync } from \"./cancelScheduledNotificationAsync\";\nexport { default as cancelAllScheduledNotificationsAsync } from \"./cancelAllScheduledNotificationsAsync\";\nexport { default as getNotificationCategoriesAsync } from \"./getNotificationCategoriesAsync\";\nexport { default as setNotificationCategoryAsync } from \"./setNotificationCategoryAsync\";\nexport { default as deleteNotificationCategoryAsync } from \"./deleteNotificationCategoryAsync\";\nexport { default as getNextTriggerDateAsync } from \"./getNextTriggerDateAsync\";\nexport { default as useLastNotificationResponse } from \"./useLastNotificationResponse\";\nexport { setAutoServerRegistrationEnabledAsync } from \"./DevicePushTokenAutoRegistration.fx\";\nexport { default as registerTaskAsync } from \"./registerTaskAsync\";\nexport { default as unregisterTaskAsync } from \"./unregisterTaskAsync\";\nexport * from \"./TokenEmitter\";\nexport * from \"./NotificationsEmitter\";\nexport * from \"./NotificationsHandler\";\nexport * from \"./NotificationPermissions\";\nexport * from \"./NotificationChannelGroupManager.types\";\nexport * from \"./NotificationChannelManager.types\";\nexport * from \"./NotificationPermissions.types\";\nexport * from \"./Notifications.types\";\nexport * from \"./Tokens.types\";","map":{"version":3,"names":["isRunningInExpoGo","areWeTestingWithJest","process","env","JEST_WORKER_ID","undefined","NODE_ENV","message","console","warn","default","getDevicePushTokenAsync","unregisterForNotificationsAsync","getExpoPushTokenAsync","getPresentedNotificationsAsync","presentNotificationAsync","dismissNotificationAsync","dismissAllNotificationsAsync","getNotificationChannelsAsync","getNotificationChannelAsync","setNotificationChannelAsync","deleteNotificationChannelAsync","getNotificationChannelGroupsAsync","getNotificationChannelGroupAsync","setNotificationChannelGroupAsync","deleteNotificationChannelGroupAsync","getBadgeCountAsync","setBadgeCountAsync","getAllScheduledNotificationsAsync","scheduleNotificationAsync","cancelScheduledNotificationAsync","cancelAllScheduledNotificationsAsync","getNotificationCategoriesAsync","setNotificationCategoryAsync","deleteNotificationCategoryAsync","getNextTriggerDateAsync","useLastNotificationResponse","setAutoServerRegistrationEnabledAsync","registerTaskAsync","unregisterTaskAsync"],"sources":["/Users/niteshnamdev/Desktop/work/menkes-app/node_modules/expo-notifications/src/index.ts"],"sourcesContent":["import { isRunningInExpoGo } from 'expo';\n\nfunction areWeTestingWithJest() {\n  return process.env.JEST_WORKER_ID !== undefined || process.env.NODE_ENV === 'TEST';\n}\n\nif (isRunningInExpoGo() && !areWeTestingWithJest()) {\n  const message =\n    '`expo-notifications` functionality is not fully supported in Expo Go:\\n' +\n    'We recommend you instead use a development build to avoid limitations. Learn more: https://expo.fyi/dev-client.';\n  console.warn(message);\n}\n\nexport { default as getDevicePushTokenAsync } from './getDevicePushTokenAsync';\nexport { default as unregisterForNotificationsAsync } from './unregisterForNotificationsAsync';\nexport { default as getExpoPushTokenAsync } from './getExpoPushTokenAsync';\nexport { default as getPresentedNotificationsAsync } from './getPresentedNotificationsAsync';\nexport { default as presentNotificationAsync } from './presentNotificationAsync';\nexport { default as dismissNotificationAsync } from './dismissNotificationAsync';\nexport { default as dismissAllNotificationsAsync } from './dismissAllNotificationsAsync';\nexport { default as getNotificationChannelsAsync } from './getNotificationChannelsAsync';\nexport { default as getNotificationChannelAsync } from './getNotificationChannelAsync';\nexport { default as setNotificationChannelAsync } from './setNotificationChannelAsync';\nexport { default as deleteNotificationChannelAsync } from './deleteNotificationChannelAsync';\nexport { default as getNotificationChannelGroupsAsync } from './getNotificationChannelGroupsAsync';\nexport { default as getNotificationChannelGroupAsync } from './getNotificationChannelGroupAsync';\nexport { default as setNotificationChannelGroupAsync } from './setNotificationChannelGroupAsync';\nexport { default as deleteNotificationChannelGroupAsync } from './deleteNotificationChannelGroupAsync';\nexport { default as getBadgeCountAsync } from './getBadgeCountAsync';\nexport { default as setBadgeCountAsync } from './setBadgeCountAsync';\nexport { default as getAllScheduledNotificationsAsync } from './getAllScheduledNotificationsAsync';\nexport { default as scheduleNotificationAsync } from './scheduleNotificationAsync';\nexport { default as cancelScheduledNotificationAsync } from './cancelScheduledNotificationAsync';\nexport { default as cancelAllScheduledNotificationsAsync } from './cancelAllScheduledNotificationsAsync';\nexport { default as getNotificationCategoriesAsync } from './getNotificationCategoriesAsync';\nexport { default as setNotificationCategoryAsync } from './setNotificationCategoryAsync';\nexport { default as deleteNotificationCategoryAsync } from './deleteNotificationCategoryAsync';\nexport { default as getNextTriggerDateAsync } from './getNextTriggerDateAsync';\nexport { default as useLastNotificationResponse } from './useLastNotificationResponse';\nexport { setAutoServerRegistrationEnabledAsync } from './DevicePushTokenAutoRegistration.fx';\nexport { default as registerTaskAsync } from './registerTaskAsync';\nexport { default as unregisterTaskAsync } from './unregisterTaskAsync';\nexport * from './TokenEmitter';\nexport * from './NotificationsEmitter';\nexport * from './NotificationsHandler';\nexport * from './NotificationPermissions';\nexport * from './NotificationChannelGroupManager.types';\nexport * from './NotificationChannelManager.types';\nexport * from './NotificationPermissions.types';\nexport * from './Notifications.types';\nexport * from './Tokens.types';\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,MAAM;AAExC,SAASC,oBAAoBA,CAAA;EAC3B,OAAOC,OAAO,CAACC,GAAG,CAACC,cAAc,KAAKC,SAAS,IAAIH,OAAO,CAACC,GAAG,CAACG,QAAQ,KAAK,MAAM;AACpF;AAEA,IAAIN,iBAAiB,EAAE,IAAI,CAACC,oBAAoB,EAAE,EAAE;EAClD,MAAMM,OAAO,GACX,yEAAyE,GACzE,iHAAiH;EACnHC,OAAO,CAACC,IAAI,CAACF,OAAO,CAAC;;AAGvB,SAASG,OAAO,IAAIC,uBAAuB;AAC3C,SAASD,OAAO,IAAIE,+BAA+B;AACnD,SAASF,OAAO,IAAIG,qBAAqB;AACzC,SAASH,OAAO,IAAII,8BAA8B;AAClD,SAASJ,OAAO,IAAIK,wBAAwB;AAC5C,SAASL,OAAO,IAAIM,wBAAwB;AAC5C,SAASN,OAAO,IAAIO,4BAA4B;AAChD,SAASP,OAAO,IAAIQ,4BAA4B;AAChD,SAASR,OAAO,IAAIS,2BAA2B;AAC/C,SAAST,OAAO,IAAIU,2BAA2B;AAC/C,SAASV,OAAO,IAAIW,8BAA8B;AAClD,SAASX,OAAO,IAAIY,iCAAiC;AACrD,SAASZ,OAAO,IAAIa,gCAAgC;AACpD,SAASb,OAAO,IAAIc,gCAAgC;AACpD,SAASd,OAAO,IAAIe,mCAAmC;AACvD,SAASf,OAAO,IAAIgB,kBAAkB;AACtC,SAAShB,OAAO,IAAIiB,kBAAkB;AACtC,SAASjB,OAAO,IAAIkB,iCAAiC;AACrD,SAASlB,OAAO,IAAImB,yBAAyB;AAC7C,SAASnB,OAAO,IAAIoB,gCAAgC;AACpD,SAASpB,OAAO,IAAIqB,oCAAoC;AACxD,SAASrB,OAAO,IAAIsB,8BAA8B;AAClD,SAAStB,OAAO,IAAIuB,4BAA4B;AAChD,SAASvB,OAAO,IAAIwB,+BAA+B;AACnD,SAASxB,OAAO,IAAIyB,uBAAuB;AAC3C,SAASzB,OAAO,IAAI0B,2BAA2B;AAC/C,SAASC,qCAAqC;AAC9C,SAAS3B,OAAO,IAAI4B,iBAAiB;AACrC,SAAS5B,OAAO,IAAI6B,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}