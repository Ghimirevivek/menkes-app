{"ast":null,"code":"var _jsxFileName = \"/Users/niteshnamdev/Desktop/work/menkes-app/src/auth/login/BiometricsScreen.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\nimport * as LocalAuthentication from \"expo-local-authentication\";\nimport { colors, fonts } from \"../../theme\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Button from \"../../components/Button\";\nimport DisableButton from \"../../components/Button/DisableButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BiometricsScreen = () => {\n  const navigation = useNavigation();\n  const [isBiometricSupported, setIsBiometricSupported] = useState(false);\n  const fallBackToDefaultAuth = () => {\n    console.log(\"Fallback to default authentication\");\n  };\n  const alertComponent = ({\n    title,\n    mess,\n    btnTxt,\n    btnFunc\n  }) => {\n    Alert.alert(title, mess, [{\n      text: btnTxt,\n      onPress: btnFunc\n    }]);\n  };\n  const TwoButtonAlert = () => Alert.alert(\"You are logged in\", \"Subscribe Now @OmatsolaDev\", [{\n    text: \"Back\",\n    onPress: () => console.log(\"Cancel Pressed\"),\n    style: \"cancel\"\n  }, {\n    text: \"PROCEED\",\n    onPress: () => console.log(\"OK Pressed\")\n  }]);\n  const handleBioMetricAuth = async () => {\n    const isBiometricAvailable = await LocalAuthentication.hasHardwareAsync();\n    console.log(\"isBiometricAvailableisBiometricAvailable\", isBiometricAvailable);\n    if (!isBiometricAvailable) {\n      return alertComponent({\n        title: \"BioMetric Auth is not supported\",\n        mess: \"Please enter your password\",\n        btnTxt: \"OK\",\n        btnFunc: fallBackToDefaultAuth\n      });\n    }\n    const supportedBiometrics = await LocalAuthentication.supportedAuthenticationTypesAsync();\n    const savedBiometrics = await LocalAuthentication.isEnrolledAsync();\n    if (!savedBiometrics) {\n      return alertComponent({\n        title: \"BioMetric record not found\",\n        mess: \"Please login with your password\",\n        btnTxt: \"OK\",\n        btnFunc: fallBackToDefaultAuth\n      });\n    }\n    const biometricAuth = await LocalAuthentication.authenticateAsync({\n      promptMessage: \"Login to Omatsola dev app with biometrics\",\n      cancelLabel: \"Cancel\",\n      disableDeviceFallback: true\n    });\n    console.log(\"biometricAuthbiometricAuth\", biometricAuth);\n    if (biometricAuth.success) {\n      TwoButtonAlert();\n    } else {\n      alertComponent({\n        title: \"Authentication Failed\",\n        mess: \"Unable to authenticate using biometrics.\",\n        btnTxt: \"OK\",\n        btnFunc: fallBackToDefaultAuth\n      });\n    }\n  };\n  useEffect(() => {\n    const checkBiometricSupport = async () => {\n      const compatible = await LocalAuthentication.hasHardwareAsync();\n      setIsBiometricSupported(compatible);\n    };\n    checkBiometricSupport();\n  }, []);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: {\n        height: \"80%\",\n        width: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [_jsxDEV(Icon, {\n        name: \"fingerprint\",\n        size: 140,\n        color: colors.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          paddingHorizontal: 20,\n          alignItems: \"center\",\n          marginVertical: 50\n        },\n        children: [_jsxDEV(Text, {\n          style: styles.description,\n          children: isBiometricSupported ? \"Your device supports Biometrics\" : \"Biometrics not supported\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.title,\n          children: \"Log in instantly with Biometrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.description,\n          children: \"Would you like to use biometrics to sign into the app? You can also do this later under account settings.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        width: \"100%\",\n        alignItems: \"center\",\n        gap: 10\n      },\n      children: [_jsxDEV(Button, {\n        label: \"Yes, enable BioMetric\",\n        onPress: handleBioMetricAuth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), _jsxDEV(DisableButton, {\n        label: \"Skip for now\",\n        onPress: () => navigation.navigate(\"NotificationsScreen\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: colors.white,\n    alignItems: \"center\"\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: 24,\n    fontWeight: 700,\n    lineHeight: 30,\n    fontFamily: fonts.calibri.bold,\n    marginBottom: 10\n  },\n  description: {\n    fontSize: 16,\n    fontWeight: 400,\n    lineHeight: 30,\n    fontFamily: fonts.calibri.regular,\n    color: colors.gray,\n    marginBottom: 16,\n    textAlign: \"center\"\n  }\n});\nexport default BiometricsScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","Alert","Icon","LocalAuthentication","colors","fonts","useNavigation","Button","DisableButton","jsxDEV","_jsxDEV","BiometricsScreen","navigation","isBiometricSupported","setIsBiometricSupported","fallBackToDefaultAuth","console","log","alertComponent","title","mess","btnTxt","btnFunc","alert","text","onPress","TwoButtonAlert","style","handleBioMetricAuth","isBiometricAvailable","hasHardwareAsync","supportedBiometrics","supportedAuthenticationTypesAsync","savedBiometrics","isEnrolledAsync","biometricAuth","authenticateAsync","promptMessage","cancelLabel","disableDeviceFallback","success","checkBiometricSupport","compatible","styles","container","children","height","width","alignItems","justifyContent","name","size","color","primary","fileName","_jsxFileName","lineNumber","columnNumber","paddingHorizontal","marginVertical","description","gap","label","navigate","create","flex","padding","backgroundColor","white","textAlign","fontSize","fontWeight","lineHeight","fontFamily","calibri","bold","marginBottom","regular","gray"],"sources":["/Users/niteshnamdev/Desktop/work/menkes-app/src/auth/login/BiometricsScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, Text, StyleSheet, Alert } from \"react-native\";\nimport Icon from \"react-native-vector-icons/FontAwesome5\";\nimport * as LocalAuthentication from \"expo-local-authentication\";\nimport { colors, fonts } from \"@/theme\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Button from \"@/components/Button\";\nimport DisableButton from \"@/components/Button/DisableButton\";\n\ntype AlertProps = {\n  title: string;\n  mess: string;\n  btnTxt: string;\n  btnFunc: () => void;\n};\n\nconst BiometricsScreen: React.FC = () => {\n  const navigation = useNavigation();\n  const [isBiometricSupported, setIsBiometricSupported] =\n    useState<boolean>(false);\n\n  const fallBackToDefaultAuth = () => {\n    console.log(\"Fallback to default authentication\");\n  };\n\n  const alertComponent = ({\n    title,\n    mess,\n    btnTxt,\n    btnFunc,\n  }: AlertProps): void => {\n    Alert.alert(title, mess, [\n      {\n        text: btnTxt,\n        onPress: btnFunc,\n      },\n    ]);\n  };\n\n  const TwoButtonAlert = (): void =>\n    Alert.alert(\"You are logged in\", \"Subscribe Now @OmatsolaDev\", [\n      {\n        text: \"Back\",\n        onPress: () => console.log(\"Cancel Pressed\"),\n        style: \"cancel\",\n      },\n      {\n        text: \"PROCEED\",\n        onPress: () => console.log(\"OK Pressed\"),\n      },\n    ]);\n\n  const handleBioMetricAuth = async (): Promise<void> => {\n    const isBiometricAvailable = await LocalAuthentication.hasHardwareAsync();\n\n    console.log(\n      \"isBiometricAvailableisBiometricAvailable\",\n      isBiometricAvailable\n    );\n\n    if (!isBiometricAvailable) {\n      return alertComponent({\n        title: \"BioMetric Auth is not supported\",\n        mess: \"Please enter your password\",\n        btnTxt: \"OK\",\n        btnFunc: fallBackToDefaultAuth,\n      });\n    }\n\n    const supportedBiometrics =\n      await LocalAuthentication.supportedAuthenticationTypesAsync();\n\n    const savedBiometrics = await LocalAuthentication.isEnrolledAsync();\n    if (!savedBiometrics) {\n      return alertComponent({\n        title: \"BioMetric record not found\",\n        mess: \"Please login with your password\",\n        btnTxt: \"OK\",\n        btnFunc: fallBackToDefaultAuth,\n      });\n    }\n\n    const biometricAuth = await LocalAuthentication.authenticateAsync({\n      promptMessage: \"Login to Omatsola dev app with biometrics\",\n      cancelLabel: \"Cancel\",\n      disableDeviceFallback: true,\n    });\n    console.log(\"biometricAuthbiometricAuth\", biometricAuth);\n\n    if (biometricAuth.success) {\n      TwoButtonAlert();\n    } else {\n      alertComponent({\n        title: \"Authentication Failed\",\n        mess: \"Unable to authenticate using biometrics.\",\n        btnTxt: \"OK\",\n        btnFunc: fallBackToDefaultAuth,\n      });\n    }\n  };\n\n  useEffect(() => {\n    const checkBiometricSupport = async () => {\n      const compatible = await LocalAuthentication.hasHardwareAsync();\n      setIsBiometricSupported(compatible);\n    };\n\n    checkBiometricSupport();\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <View\n        style={{\n          height: \"80%\",\n          width: \"100%\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Icon name=\"fingerprint\" size={140} color={colors.primary} />\n\n        <View\n          style={{\n            paddingHorizontal: 20,\n            alignItems: \"center\",\n            marginVertical: 50,\n          }}\n        >\n          <Text style={styles.description}>\n            {isBiometricSupported\n              ? \"Your device supports Biometrics\"\n              : \"Biometrics not supported\"}\n          </Text>\n          <Text style={styles.title}>Log in instantly with Biometrics</Text>\n          <Text style={styles.description}>\n            Would you like to use biometrics to sign into the app? You can also\n            do this later under account settings.\n          </Text>\n        </View>\n      </View>\n\n      <View style={{ width: \"100%\", alignItems: \"center\", gap: 10 }}>\n        <Button label=\"Yes, enable BioMetric\" onPress={handleBioMetricAuth} />\n        <DisableButton\n          label=\"Skip for now\"\n          onPress={() => navigation.navigate(\"NotificationsScreen\")}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: colors.white,\n    alignItems: \"center\",\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: 24,\n    fontWeight: 700,\n    lineHeight: 30,\n    fontFamily: fonts.calibri.bold,\n    marginBottom: 10,\n  },\n  description: {\n    fontSize: 16,\n    fontWeight: 400,\n    lineHeight: 30,\n    fontFamily: fonts.calibri.regular,\n    color: colors.gray,\n    marginBottom: 16,\n    textAlign: \"center\",\n  },\n});\n\nexport default BiometricsScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}