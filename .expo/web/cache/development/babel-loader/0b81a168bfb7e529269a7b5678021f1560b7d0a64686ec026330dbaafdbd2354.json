{"ast":null,"code":"var _jsxFileName = \"/Users/niteshnamdev/Desktop/work/menkes-app/src/auth/register/registerProfile/RegisterProfileForm.tsx\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AccountDetails from \"../AccountDetails\";\nimport ProfileDetails from \"../ProfileDetails\";\nimport BrokerageDetails from \"../BrokerageDetails\";\nimport { colors } from \"../../../theme\";\nimport Button from \"../../../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterProfileForm = ({\n  handleNext,\n  setFormData\n}) => {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    firstName: \"\",\n    middleName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    birthday: \"\",\n    recoNumber: \"\",\n    brokerageName: \"\",\n    officePhone: \"\",\n    brokerageAddress: \"\",\n    country: \"\",\n    province: \"\",\n    city: \"\",\n    postalCode: \"\"\n  });\n  const [validityState, setValidityState] = useState({\n    emailValid: true,\n    passwordValid: false,\n    passwordsMatch: false\n  });\n  const updateFormState = (field, value) => {\n    setFormState(prev => Object.assign({}, prev, {\n      [field]: value\n    }));\n  };\n  const updateValidityState = (field, isValid) => {\n    setValidityState(prev => Object.assign({}, prev, {\n      [field]: isValid\n    }));\n  };\n  const isFormComplete = Object.values(formState).every(value => value.trim() !== \"\") && Object.values(validityState).every(isValid => isValid);\n  const handleNextStep = () => {\n    setFormData(formState);\n    handleNext();\n  };\n  return _jsxDEV(ScrollView, {\n    style: styles.container,\n    children: [_jsxDEV(AccountDetails, {\n      formState: formState,\n      updateFormState: updateFormState,\n      validityState: validityState,\n      updateValidityState: updateValidityState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), _jsxDEV(ProfileDetails, {\n      formState: formState,\n      updateFormState: updateFormState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), _jsxDEV(BrokerageDetails, {\n      formState: formState,\n      updateFormState: updateFormState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        padding: 16\n      },\n      children: _jsxDEV(Button, {\n        label: \"Continue\",\n        onPress: handleNextStep,\n        disabled: !isFormComplete,\n        buttonStyle: {\n          backgroundColor: isFormComplete ? colors.primary : colors.disablebutton\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.formBackground,\n    padding: 16\n  }\n});\nexport default RegisterProfileForm;","map":{"version":3,"names":["React","useState","View","StyleSheet","ScrollView","AccountDetails","ProfileDetails","BrokerageDetails","colors","Button","jsxDEV","_jsxDEV","RegisterProfileForm","handleNext","setFormData","formState","setFormState","email","password","confirmPassword","firstName","middleName","lastName","phone","birthday","recoNumber","brokerageName","officePhone","brokerageAddress","country","province","city","postalCode","validityState","setValidityState","emailValid","passwordValid","passwordsMatch","updateFormState","field","value","prev","Object","assign","updateValidityState","isValid","isFormComplete","values","every","trim","handleNextStep","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","padding","label","onPress","disabled","buttonStyle","backgroundColor","primary","disablebutton","create","flex","formBackground"],"sources":["/Users/niteshnamdev/Desktop/work/menkes-app/src/auth/register/registerProfile/RegisterProfileForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet, ScrollView } from \"react-native\";\nimport AccountDetails from \"../AccountDetails\";\nimport ProfileDetails from \"../ProfileDetails\";\nimport BrokerageDetails from \"../BrokerageDetails\";\nimport { colors } from \"@/theme\";\nimport Button from \"@/components/Button\";\n\ntype FormState = {\n  email: string;\n  password: string;\n  confirmPassword: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  phone: string;\n  birthday: string;\n  recoNumber: string;\n  brokerageName: string;\n  officePhone: string;\n  brokerageAddress: string;\n  country: string;\n  province: string;\n  city: string;\n  postalCode: string;\n};\n\ntype ValidityState = {\n  emailValid: boolean;\n  passwordValid: boolean;\n  passwordsMatch: boolean;\n};\n\ntype RegisterProfileFormProps = {\n  handleNext: () => void;\n  setFormData: (data: FormState) => void;\n};\n\nconst RegisterProfileForm: React.FC<RegisterProfileFormProps> = ({\n  handleNext,\n  setFormData,\n}) => {\n  const [formState, setFormState] = useState<FormState>({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    firstName: \"\",\n    middleName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    birthday: \"\",\n    recoNumber: \"\",\n    brokerageName: \"\",\n    officePhone: \"\",\n    brokerageAddress: \"\",\n    country: \"\",\n    province: \"\",\n    city: \"\",\n    postalCode: \"\",\n  });\n\n  const [validityState, setValidityState] = useState<ValidityState>({\n    emailValid: true,\n    passwordValid: false,\n    passwordsMatch: false,\n  });\n\n  const updateFormState = (field: keyof FormState, value: string) => {\n    setFormState((prev) => ({ ...prev, [field]: value }));\n  };\n\n  const updateValidityState = (\n    field: keyof ValidityState,\n    isValid: boolean\n  ) => {\n    setValidityState((prev) => ({ ...prev, [field]: isValid }));\n  };\n\n  const isFormComplete =\n    Object.values(formState).every((value) => value.trim() !== \"\") &&\n    Object.values(validityState).every((isValid) => isValid);\n\n  const handleNextStep = () => {\n    setFormData(formState);\n    handleNext();\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <AccountDetails\n        formState={formState}\n        updateFormState={updateFormState}\n        validityState={validityState}\n        updateValidityState={updateValidityState}\n      />\n      <ProfileDetails formState={formState} updateFormState={updateFormState} />\n      <BrokerageDetails\n        formState={formState}\n        updateFormState={updateFormState}\n      />\n\n      <View style={{ padding: 16 }}>\n        <Button\n          label=\"Continue\"\n          onPress={handleNextStep}\n          disabled={!isFormComplete}\n          buttonStyle={{\n            backgroundColor: isFormComplete\n              ? colors.primary\n              : colors.disablebutton,\n          }}\n          // textStyle={{ color: \"#fff\" }}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.formBackground,\n    padding: 16,\n  },\n});\n\nexport default RegisterProfileForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}