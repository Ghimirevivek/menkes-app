{"ast":null,"code":"var _jsxFileName = \"/Users/niteshnamdev/Desktop/work/menkes-app/src/auth/login/LoginScreen.tsx\";\nimport React, { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { loginUser } from \"../../redux/slices/authSlice\";\nimport { colors, fonts } from \"../../theme\";\nimport AnimatedTextInput from \"../../components/input/InputText\";\nimport Button from \"../../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = ({\n  navigation\n}) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const dispatch = useAppDispatch();\n  const {\n    loading\n  } = useAppSelector(state => state.registration);\n  const hardcodedEmail = \"example@gmail.com\";\n  const hardcodedPassword = \"123456\";\n  const handleLogin = () => {\n    if (!email || !password) {\n      Alert.alert(\"Validation Error\", \"Both email and password are required.\");\n      return;\n    }\n    if (email !== hardcodedEmail || password !== hardcodedPassword) {\n      setErrorMessage(\"The password you entered is incorrect\");\n      return;\n    }\n    setErrorMessage(\"\");\n    dispatch(loginUser({\n      email,\n      password\n    })).unwrap().then(() => {\n      navigation.navigate(\"BiometricsScreen\");\n    }).catch(err => {\n      setErrorMessage(err || \"Invalid login credentials.\");\n    });\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(AnimatedTextInput, {\n      label: \"Email Address or Menkes ID\",\n      value: email,\n      onChangeText: text => setEmail(text),\n      keyboardType: \"email-address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), _jsxDEV(AnimatedTextInput, {\n      label: \"Password\",\n      value: password,\n      onChangeText: text => setPassword(text),\n      secureTextEntry: true,\n      error: !!errorMessage,\n      apiFailed: !!errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), errorMessage && _jsxDEV(Text, {\n      style: styles.errorText,\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 24\n    }, this), _jsxDEV(View, {\n      style: {\n        alignItems: \"center\",\n        marginVertical: 22\n      },\n      children: _jsxDEV(TouchableOpacity, {\n        onPress: () => navigation.navigate(\"ForgetPasswordScreen\"),\n        children: _jsxDEV(Text, {\n          style: {\n            fontSize: 16,\n            fontWeight: \"700\",\n            color: colors.primary,\n            fontFamily: fonts.calibri.bold,\n            lineHeight: 24\n          },\n          children: \"Forget password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      label: loading ? \"Logging in...\" : \"Login\",\n      onPress: handleLogin,\n      disabled: !email || !password,\n      buttonStyle: {\n        backgroundColor: !email || !password ? colors.disablebutton : colors.primary\n      },\n      textStyle: {\n        color: !email || !password ? colors.gray : colors.white\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: colors.formBackground\n  },\n  forgotPassword: {\n    color: colors.primary,\n    textAlign: \"center\",\n    marginBottom: 16,\n    fontSize: 16,\n    fontWeight: \"700\",\n    fontFamily: fonts.calibri.bold\n  },\n  errorText: {\n    color: colors.error,\n    textAlign: \"left\",\n    marginTop: 0,\n    marginLeft: 8,\n    fontSize: 16,\n    fontWeight: 400,\n    lineHeight: 24,\n    fontFamily: fonts.calibri.regular\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useAppDispatch","useAppSelector","View","Text","StyleSheet","TouchableOpacity","Alert","loginUser","colors","fonts","AnimatedTextInput","Button","jsxDEV","_jsxDEV","LoginScreen","navigation","email","setEmail","password","setPassword","errorMessage","setErrorMessage","dispatch","loading","state","registration","hardcodedEmail","hardcodedPassword","handleLogin","alert","unwrap","then","navigate","catch","err","style","styles","container","children","label","value","onChangeText","text","keyboardType","fileName","_jsxFileName","lineNumber","columnNumber","secureTextEntry","error","apiFailed","errorText","alignItems","marginVertical","onPress","fontSize","fontWeight","color","primary","fontFamily","calibri","bold","lineHeight","disabled","buttonStyle","backgroundColor","disablebutton","textStyle","gray","white","create","flex","padding","formBackground","forgotPassword","textAlign","marginBottom","marginTop","marginLeft","regular"],"sources":["/Users/niteshnamdev/Desktop/work/menkes-app/src/auth/login/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"@/redux/hooks\"; // Adjust the path\nimport { View, Text, StyleSheet, TouchableOpacity, Alert } from \"react-native\";\nimport { loginUser } from \"@/redux/slices/authSlice\"; // Adjust the path as needed\nimport { colors, fonts } from \"@/theme\";\nimport AnimatedTextInput from \"@/components/input/InputText\";\nimport Button from \"@/components/Button\";\n\nconst LoginScreen: React.FC = ({ navigation }: any) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const dispatch = useAppDispatch();\n\n  const { loading } = useAppSelector((state) => state.registration);\n\n  // Hardcoded credentials\n  const hardcodedEmail = \"example@gmail.com\";\n  const hardcodedPassword = \"123456\";\n\n  const handleLogin = () => {\n    if (!email || !password) {\n      Alert.alert(\"Validation Error\", \"Both email and password are required.\");\n      return;\n    }\n\n    if (email !== hardcodedEmail || password !== hardcodedPassword) {\n      setErrorMessage(\"The password you entered is incorrect\");\n      return;\n    }\n\n    setErrorMessage(\"\");\n    dispatch(loginUser({ email, password }))\n      .unwrap()\n      .then(() => {\n        navigation.navigate(\"BiometricsScreen\");\n      })\n      .catch((err: string) => {\n        setErrorMessage(err || \"Invalid login credentials.\");\n      });\n  };\n\n  return (\n    <View style={styles.container}>\n      <AnimatedTextInput\n        label=\"Email Address or Menkes ID\"\n        value={email}\n        onChangeText={(text: string) => setEmail(text)}\n        keyboardType=\"email-address\"\n      />\n      <AnimatedTextInput\n        label=\"Password\"\n        value={password}\n        onChangeText={(text: string) => setPassword(text)}\n        secureTextEntry\n        error={!!errorMessage}\n        apiFailed={!!errorMessage}\n      />\n\n      {errorMessage && <Text style={styles.errorText}>{errorMessage}</Text>}\n\n      <View style={{ alignItems: \"center\", marginVertical: 22 }}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"ForgetPasswordScreen\")}\n        >\n          <Text\n            style={{\n              fontSize: 16,\n              fontWeight: \"700\",\n              color: colors.primary,\n              fontFamily: fonts.calibri.bold,\n              lineHeight: 24,\n            }}\n          >\n            Forget password?\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      <Button\n        label={loading ? \"Logging in...\" : \"Login\"}\n        onPress={handleLogin}\n        disabled={!email || !password}\n        buttonStyle={{\n          backgroundColor:\n            !email || !password ? colors.disablebutton : colors.primary,\n        }}\n        textStyle={{\n          color: !email || !password ? colors.gray : colors.white,\n        }}\n      />\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 16, backgroundColor: colors.formBackground },\n  forgotPassword: {\n    color: colors.primary,\n    textAlign: \"center\",\n    marginBottom: 16,\n    fontSize: 16,\n    fontWeight: \"700\",\n    fontFamily: fonts.calibri.bold,\n  },\n  errorText: {\n    color: colors.error,\n    textAlign: \"left\",\n    marginTop: 0,\n    marginLeft: 8,\n    fontSize: 16,\n    fontWeight: 400,\n    lineHeight: 24,\n    fontFamily: fonts.calibri.regular,\n  },\n});\n\nexport default LoginScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,cAAc;AAAwB,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAE/D,SAASC,SAAS;AAClB,SAASC,MAAM,EAAEC,KAAK;AACtB,OAAOC,iBAAiB;AACxB,OAAOC,MAAM;AAA4B,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAqB,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMuB,QAAQ,GAAGtB,cAAc,CAAC,CAAC;EAEjC,MAAM;IAAEuB;EAAQ,CAAC,GAAGtB,cAAc,CAAEuB,KAAK,IAAKA,KAAK,CAACC,YAAY,CAAC;EAGjE,MAAMC,cAAc,GAAG,mBAAmB;EAC1C,MAAMC,iBAAiB,GAAG,QAAQ;EAElC,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACZ,KAAK,IAAI,CAACE,QAAQ,EAAE;MACvBZ,KAAK,CAACuB,KAAK,CAAC,kBAAkB,EAAE,uCAAuC,CAAC;MACxE;IACF;IAEA,IAAIb,KAAK,KAAKU,cAAc,IAAIR,QAAQ,KAAKS,iBAAiB,EAAE;MAC9DN,eAAe,CAAC,uCAAuC,CAAC;MACxD;IACF;IAEAA,eAAe,CAAC,EAAE,CAAC;IACnBC,QAAQ,CAACf,SAAS,CAAC;MAAES,KAAK;MAAEE;IAAS,CAAC,CAAC,CAAC,CACrCY,MAAM,CAAC,CAAC,CACRC,IAAI,CAAC,MAAM;MACVhB,UAAU,CAACiB,QAAQ,CAAC,kBAAkB,CAAC;IACzC,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAW,IAAK;MACtBb,eAAe,CAACa,GAAG,IAAI,4BAA4B,CAAC;IACtD,CAAC,CAAC;EACN,CAAC;EAED,OACErB,OAAA,CAACX,IAAI;IAACiC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BzB,OAAA,CAACH,iBAAiB;MAChB6B,KAAK,EAAC,4BAA4B;MAClCC,KAAK,EAAExB,KAAM;MACbyB,YAAY,EAAGC,IAAY,IAAKzB,QAAQ,CAACyB,IAAI,CAAE;MAC/CC,YAAY,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,EACFlC,OAAA,CAACH,iBAAiB;MAChB6B,KAAK,EAAC,UAAU;MAChBC,KAAK,EAAEtB,QAAS;MAChBuB,YAAY,EAAGC,IAAY,IAAKvB,WAAW,CAACuB,IAAI,CAAE;MAClDM,eAAe;MACfC,KAAK,EAAE,CAAC,CAAC7B,YAAa;MACtB8B,SAAS,EAAE,CAAC,CAAC9B;IAAa;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,EAED3B,YAAY,IAAIP,OAAA,CAACV,IAAI;MAACgC,KAAK,EAAEC,MAAM,CAACe,SAAU;MAAAb,QAAA,EAAElB;IAAY;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAErElC,OAAA,CAACX,IAAI;MAACiC,KAAK,EAAE;QAAEiB,UAAU,EAAE,QAAQ;QAAEC,cAAc,EAAE;MAAG,CAAE;MAAAf,QAAA,EACxDzB,OAAA,CAACR,gBAAgB;QACfiD,OAAO,EAAEA,CAAA,KAAMvC,UAAU,CAACiB,QAAQ,CAAC,sBAAsB,CAAE;QAAAM,QAAA,EAE3DzB,OAAA,CAACV,IAAI;UACHgC,KAAK,EAAE;YACLoB,QAAQ,EAAE,EAAE;YACZC,UAAU,EAAE,KAAK;YACjBC,KAAK,EAAEjD,MAAM,CAACkD,OAAO;YACrBC,UAAU,EAAElD,KAAK,CAACmD,OAAO,CAACC,IAAI;YAC9BC,UAAU,EAAE;UACd,CAAE;UAAAxB,QAAA,EACH;QAED;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,EAEPlC,OAAA,CAACF,MAAM;MACL4B,KAAK,EAAEhB,OAAO,GAAG,eAAe,GAAG,OAAQ;MAC3C+B,OAAO,EAAE1B,WAAY;MACrBmC,QAAQ,EAAE,CAAC/C,KAAK,IAAI,CAACE,QAAS;MAC9B8C,WAAW,EAAE;QACXC,eAAe,EACb,CAACjD,KAAK,IAAI,CAACE,QAAQ,GAAGV,MAAM,CAAC0D,aAAa,GAAG1D,MAAM,CAACkD;MACxD,CAAE;MACFS,SAAS,EAAE;QACTV,KAAK,EAAE,CAACzC,KAAK,IAAI,CAACE,QAAQ,GAAGV,MAAM,CAAC4D,IAAI,GAAG5D,MAAM,CAAC6D;MACpD;IAAE;MAAAzB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AACD,MAAMX,MAAM,GAAGhC,UAAU,CAACkE,MAAM,CAAC;EAC/BjC,SAAS,EAAE;IAAEkC,IAAI,EAAE,CAAC;IAAEC,OAAO,EAAE,EAAE;IAAEP,eAAe,EAAEzD,MAAM,CAACiE;EAAe,CAAC;EAC3EC,cAAc,EAAE;IACdjB,KAAK,EAAEjD,MAAM,CAACkD,OAAO;IACrBiB,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE,EAAE;IAChBrB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBG,UAAU,EAAElD,KAAK,CAACmD,OAAO,CAACC;EAC5B,CAAC;EACDV,SAAS,EAAE;IACTM,KAAK,EAAEjD,MAAM,CAACyC,KAAK;IACnB0B,SAAS,EAAE,MAAM;IACjBE,SAAS,EAAE,CAAC;IACZC,UAAU,EAAE,CAAC;IACbvB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,GAAG;IACfM,UAAU,EAAE,EAAE;IACdH,UAAU,EAAElD,KAAK,CAACmD,OAAO,CAACmB;EAC5B;AACF,CAAC,CAAC;AAEF,eAAejE,WAAW","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}