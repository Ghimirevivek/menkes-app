{"ast":null,"code":"var _jsxFileName = \"/Users/niteshnamdev/Desktop/work/menkes-app/src/auth/forgot/ForgetPasswordScreen.tsx\";\nimport Button from \"../../components/Button\";\nimport AnimatedTextInput from \"../../components/input/InputText\";\nimport { colors } from \"../../theme\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgetPasswordScreen = ({\n  navigation\n}) => {\n  const [email, setEmail] = useState(\"\");\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(AnimatedTextInput, {\n      label: \"Email\",\n      value: email,\n      onChangeText: text => setEmail(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        width: \"100%\",\n        alignItems: \"center\",\n        gap: 10\n      },\n      children: _jsxDEV(Button, {\n        label: \"Continue\",\n        onPress: () => navigation.navigate(\"VerificationScreen\"),\n        disabled: !email,\n        buttonStyle: {\n          backgroundColor: email ? colors.primary : colors.disablebutton\n        },\n        textStyle: {\n          color: email ? colors.white : colors.gray\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 20,\n    paddingVertical: 40,\n    justifyContent: \"space-between\",\n    backgroundColor: colors.white\n  }\n});\nexport default ForgetPasswordScreen;","map":{"version":3,"names":["Button","AnimatedTextInput","colors","React","useState","View","StyleSheet","jsxDEV","_jsxDEV","ForgetPasswordScreen","navigation","email","setEmail","style","styles","container","children","label","value","onChangeText","text","fileName","_jsxFileName","lineNumber","columnNumber","width","alignItems","gap","onPress","navigate","disabled","buttonStyle","backgroundColor","primary","disablebutton","textStyle","color","white","gray","create","flex","paddingHorizontal","paddingVertical","justifyContent"],"sources":["/Users/niteshnamdev/Desktop/work/menkes-app/src/auth/forgot/ForgetPasswordScreen.tsx"],"sourcesContent":["import Button from \"@/components/Button\";\nimport AnimatedTextInput from \"@/components/input/InputText\";\nimport { colors, fonts } from \"@/theme\";\nimport React, { useState } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\n\nconst ForgetPasswordScreen = ({ navigation }: any) => {\n  const [email, setEmail] = useState<string>(\"\");\n\n  return (\n    <View style={styles.container}>\n      <AnimatedTextInput\n        label=\"Email\"\n        value={email}\n        onChangeText={(text: string) => setEmail(text)}\n      />\n\n      <View style={{ width: \"100%\", alignItems: \"center\", gap: 10 }}>\n        <Button\n          label=\"Continue\"\n          onPress={() => navigation.navigate(\"VerificationScreen\")}\n          disabled={!email}\n          buttonStyle={{\n            backgroundColor: email ? colors.primary : colors.disablebutton,\n          }}\n          textStyle={{\n            color: email ? colors.white : colors.gray,\n          }}\n        />\n      </View>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 20,\n    paddingVertical: 40,\n    justifyContent: \"space-between\",\n    backgroundColor: colors.white,\n  },\n});\n\nexport default ForgetPasswordScreen;\n"],"mappings":";AAAA,OAAOA,MAAM;AACb,OAAOC,iBAAiB;AACxB,SAASC,MAAM;AACf,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EACpD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAE9C,OACEI,OAAA,CAACH,IAAI;IAACQ,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BR,OAAA,CAACP,iBAAiB;MAChBgB,KAAK,EAAC,OAAO;MACbC,KAAK,EAAEP,KAAM;MACbQ,YAAY,EAAGC,IAAY,IAAKR,QAAQ,CAACQ,IAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,EAEFhB,OAAA,CAACH,IAAI;MAACQ,KAAK,EAAE;QAAEY,KAAK,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,GAAG,EAAE;MAAG,CAAE;MAAAX,QAAA,EAC5DR,OAAA,CAACR,MAAM;QACLiB,KAAK,EAAC,UAAU;QAChBW,OAAO,EAAEA,CAAA,KAAMlB,UAAU,CAACmB,QAAQ,CAAC,oBAAoB,CAAE;QACzDC,QAAQ,EAAE,CAACnB,KAAM;QACjBoB,WAAW,EAAE;UACXC,eAAe,EAAErB,KAAK,GAAGT,MAAM,CAAC+B,OAAO,GAAG/B,MAAM,CAACgC;QACnD,CAAE;QACFC,SAAS,EAAE;UACTC,KAAK,EAAEzB,KAAK,GAAGT,MAAM,CAACmC,KAAK,GAAGnC,MAAM,CAACoC;QACvC;MAAE;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AACD,MAAMV,MAAM,GAAGR,UAAU,CAACiC,MAAM,CAAC;EAC/BxB,SAAS,EAAE;IACTyB,IAAI,EAAE,CAAC;IACPC,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBC,cAAc,EAAE,eAAe;IAC/BX,eAAe,EAAE9B,MAAM,CAACmC;EAC1B;AACF,CAAC,CAAC;AAEF,eAAe5B,oBAAoB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}